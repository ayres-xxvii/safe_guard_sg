import 'package:http/http.dart' as http;
import 'package:safe_guard_sg/models/incident_report.dart';
import 'dart:convert';

import 'package:safe_guard_sg/services/incident_service.dart';

// Service for handling API calls to OpenRouter
class OpenRouterService {
  final String apiKey;
  late List<IncidentReport> incidents;

  OpenRouterService({
    required this.apiKey,
  });

  Future<String> generateNewsArticle() async {
    try {
      IncidentService incidentService = IncidentService();
      incidents = await incidentService.getIncidentsByDateRange(
        DateTime.now().subtract(const Duration(days: 30)), DateTime.now(),
      );

      print(incidents.map((e) => '${e.type.toString().split('.').last} at ${e.location} on ${e.date}').toList());

      final response = await http.post(
        Uri.parse('https://openrouter.ai/api/v1/chat/completions'),
        headers: {
          'Authorization': 'Bearer $apiKey',
        },
        body: jsonEncode({
          'model': 'deepseek/deepseek-r1:free',
          'messages': [
            {
              'role': 'user',
              'content': '''
                          Incidents: ${incidents.map((e) => '${e.type.toString().split('.').last} at ${e.location} on ${e.date}').toList()}


                          You are part of a public safety app, SafeGuardSG in Singapore where people can report incidents like floods, fires, and other emergencies. Only use the incidents provided. If there were none, please do not make up any incidents.

                          Your job is to:
                          1. Spot trends in the reported incidents above (example: There have been an influx of floods in the Northern part of singapore, notably in Yishun).
                          2. Warn users about possible upcoming risks based on these patterns.
                          3. Share simple, clear precautions tailored to each type of incident.
                          4. Give users quick, practical tips on what to do if they face a similar situation.

                          Keep your messages short, engaging, and easy to understand so that users will be more inclined to read them. Use a friendly tone and avoid technical jargon.
                          Make sure you DO NOT include any incidents not mentioned under "Incidents".
                          Please include a disclaimer at the top of the message in italics that says "This is an article generated by AI. Please verify the information with official sources."
                          Please only return the article part of the message for the users to read. Do not include follow up texts or explanations
                          '''
            }
          ],
          'temperature': 0.7,
        }),
      );

      final data = jsonDecode(utf8.decode(response.bodyBytes));
      print(data['choices'][0]['message']['content']);
      if (response.statusCode == 200) {
        return data['choices'][0]['message']['content'];
      } else {
        return 'Error: ${data['error']['message'] ?? 'Failed to generate article'}';
      }
    } catch (e) {
      return 'Error: $e';
    }
  }
}

